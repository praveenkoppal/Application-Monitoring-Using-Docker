# services:
#   api:
#     build:
#       context: ./api
#     container_name: api-server
#     ports:
#       - "3000:3000"  # Expose API server on port 3000
#     depends_on:
#       - kafka
#     volumes:
#       - ./api:/usr/src/app/api  # Mount the API folder
#       - ./kafka:/usr/src/app/kafka  # Mount the Kafka folder
#     environment:
#       KAFKA_BROKER: kafka:9092  # Correct broker address for the API
#     networks:
#       - log-network

#   kafka:
#     image: wurstmeister/kafka:latest
#     container_name: kafka
#     ports:
#       - "9092:9092"
#     environment:
#       KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092  # Correct setting
#       KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092  # Allows external access
#       KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#       KAFKA_BROKER_ID: 1
#     depends_on:
#       - zookeeper
#     networks:
#       - log-network

#   zookeeper:
#     image: wurstmeister/zookeeper:latest
#     container_name: zookeeper
#     ports:
#       - "2181:2181"
#     networks:
#       - log-network

#  networks:
#    log-network:
#      driver: bridge




services:
  api:
    build:
      context: ./api
    container_name: api-server
    ports:
      - "3000:3000"
    depends_on:
      - kafka
    volumes:
      - ./api:/usr/src/app/api
      - ./kafka:/usr/src/app/kafka  # Mounts Kafka folder so API can trigger producer.js
    environment:
      KAFKA_BROKER: kafka:9092
    networks:
      - log-network

  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKER_ID: 1
      KAFKA_CREATE_TOPICS: "api-logs:1:1,api-errors:1:1"
    depends_on:
      - zookeeper
    networks:
      - log-network

  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - log-network

  database:
    image: postgres:latest
    container_name: postgres_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mysecretpassword
      POSTGRES_DB: logs_db
    ports:
      - "5432:5432"
    networks:
      - log-network
    volumes:
      - pg_data:/var/lib/postgresql/data  # Ensures database persistence

  kafka-consumer:
    build:
      context: ./kafka
    container_name: kafka-consumer
    depends_on:
      - kafka
      - database
    environment:
      DB_USER: postgres
      DB_PASSWORD: mysecretpassword
      DB_HOST: database
      DB_PORT: 5432
      DB_NAME: logs_db
      KAFKA_BROKER: kafka:9092
    networks:
      - log-network
    working_dir: /usr/src/app/kafka
    command: ["node", "consumer.js"]  # Ensures it runs consumer.js on start

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3001:3000"  # Expose Grafana on port 3001 (since API is on 3000)
    depends_on:
      - database
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=rcb  # Default password (change if needed)
    networks:
      - log-network
    volumes:
      - grafana_data:/var/lib/grafana  # Persist Grafana dashboards

volumes:
  pg_data:  # Persistent volume for database storage
  grafana_data:  # Persistent volume for Grafana dashboards

networks:
  log-network:
    driver: bridge
